/*  ||>>>====================----------     ----------====================<<<||				DRL String Tools v1.2		DEPENDENCIES:		<None>		(all additional procedures that are called from this script are		also inside this script).		This script contains must-have service procedures for string editing.	There are following functions in this file:			>>> DRL_string_find <<<		Description:			If 2nd given string is in 1st given string, returns position			of the 1st match. Else returns 0.		Usage:			DRL_string_find(<where_to_search>, <what_to_search>)		e.g.:			$a = "adqwesftrqwerhndsqwerzrlsaqwerty";			$b = "qwer";			DRL_string_find($a, $b);			//Result: 10	>>> DRL_string_rem <<<		Description:			Removes the given part from the string.		Usage:			DRL_string_rem(<string>, <1st_removed_character>, <length>)		e.g.:			$a = "adqwesftrqwer";			DRL_string_rem($a, 6, 3);			//Result: adqwerqwer			DRL_string_rem($a, 3, 999);			//Result: ad    ||>>>====================----------     ----------====================<<<||*/global proc int DRL_string_find (string $string, string $substring) {	int $size1=`size $string`, $size2=`size $substring`;	if ($size1 && $size2 && $size1>=$size2) {		$size1 = $size1 - $size2 + 1;		int $i=1, $result=0;		while ($i <= $size1) {			if (`substring $string $i ($i+$size2-1)` == $substring) break;			$i++;		}		if ($i <= $size1) $result = $i;		return $result;	} else return 0;}global proc string DRL_string_rem (string $string, int $pos, int $length) {	int $size = `size $string`;	if ($size<1 || $length<1 || $pos<1 || $pos>$size) {		return $string;	} else {		string $result = "";		if ($pos > 1) $result = `substring $string 1 ($pos-1)`;		if ($pos+$length-1 < $size) {			$result += `substring $string ($pos+$length) $size`;		}		return $result;	}}global proc string DRL_gmatch_clean (string $str) {	int $i;	string $sub, $pre, $res;		$res = $str;		for ($i = 1; $i <= `size $res`; $i++) {		$sub = `substring $res $i $i`;		if ($sub == "*" || $sub == "?" || $sub == "[" || $sub == "]") {			if ($i > 1)				$pre = `substring $res 1 ($i - 1)`;			else				$pre = "";			$res = $pre + "\\" + `substring $res $i (size($res))`;			$i++;		}	}		return $res;}